---
description: Telegram Mini App - Generator of random numbers (RU)
globs:
alwaysApply: true
---

## Цель
Мини-приложение Telegram (WebApp) для генерации случайного целого числа в заданном диапазоне. Простой и быстрый UX, соответствие гайдам Telegram.

## Область
- Платформа: Telegram Mini App (WebApp), фронтенд single-page.
- Ядро: JavaScript/TypeScript + HTML/CSS. Без бэкенда.
- Совместимость: мобильные клиенты Telegram iOS/Android и Desktop.

## Экран(ы) и UI
- Один экран с элементами:
  - Большое число-результат по центру (шрифт 96–128 px на мобильном, auto-scale).
  - Поле ввода `min` (число, placeholder: 1).
  - Поле ввода `max` (число, placeholder: 100).
  - Кнопка `Рандом`.
- Цветовая схема: фон — синий (#26A5E4 / Telegram), текст — белый, поля — белые с легкой тенью, кнопка — темно-синяя.
- Локализация: русский (строки в одном месте).

## Поведение
- При первом запуске автозаполнять `min=1`, `max=100`, результат пустой.
- По нажатию `Рандом`:
  - Валидировать диапазон.
  - Сгенерировать равномерно распределенное целое N ∈ [min, max].
  - Показать N крупным текстом, выполнить легкую анимацию (scale/opacity 150–250 мс).
- Кнопка недоступна, если валидации не пройдены.

## Валидации
- `min` и `max` обязательны, целые, допускаются ведущие/замыкающие пробелы.
- Диапазон: `min ≤ max`.
- Границы: |min|, |max| ≤ 2^31-1.
- Автокоррекция: если пользователь ввел не-число — очищать поле; если `min > max` — подсветить оба поля и показать текст ошибки под ними.

## Логика генерации
- Использовать `crypto.getRandomValues` при наличии, иначе `Math.random` (фолбэк).
- Формула: `min + (rand % (max - min + 1))`, где `rand` — беззнаковое 32-битное.

## Состояние
- Хранить в памяти: `min`, `max`, `lastResult`.
- Синхронизация с Telegram theme params (переключение темы) — обновлять цвета при событии.

## Интеграция с Telegram
- Инициализация через `Telegram.WebApp.initDataUnsafe`.
- Установить `WebApp.ready()`, `WebApp.expand()`.
- Использовать `MainButton` как дубликат кнопки `Рандом` (текст `Рандом`).

## Доступность и UX
- Фокус-стили для инпутов.
- Поддержка клавиатуры: Enter на любом поле триггерит генерацию.
- Сообщения об ошибках краткие, на русском.

## Метрики (опционально)
- Console log выключен в проде. Без внешней аналитики.

## Сборка и структура
- `index.html`, `styles.css`, `app.ts`/`app.js`.
- Без фреймворков. Если используется TS — включить строгий режим.

## Нефункциональные требования
- Время отображения результата после клика <= 50 мс на средних устройствах.
- Работает офлайн после первого открытия (опционально: простейший Service Worker).

## Критерии приёмки
- При `min=1`, `max=1` всегда выводится `1`.
- При `min=1`, `max=100` результат всегда в диапазоне и меняется между кликами статистически равномерно.
- При `min>max` кнопка неактивна и отображается ошибка.
- На iOS и Android в Telegram WebApp интерфейс соответствует макету, кнопка `MainButton` работает.

## Ограничения
- Нет серверной части; никаких внешних API.
- Только один экран.

## Опубликование
- Раздача как статика через хостинг, подключение как Mini App по URL.
